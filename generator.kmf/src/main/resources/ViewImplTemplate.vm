package ${mmPackName}.impl;

public class ${mmName}ViewImpl extends org.kevoree.modeling.api.abs.AbstractKView implements ${mmPackName}.${mmName}View {

    public ${mmName}ViewImpl(long p_now, org.kevoree.modeling.api.KUniverse p_universe) {
        super(p_now, p_universe);
    }

    @Override
    protected org.kevoree.modeling.api.KObject internalCreate(org.kevoree.modeling.api.meta.MetaClass p_clazz, long p_key) {
        if (p_clazz == null) {
            return null;
        }
        switch (p_clazz.index()) {
        #foreach($class in $model.getClasses())
        #set($lastIdx = $class.fqn.lastIndexOf(".")+1)
        case ${class.index} : return new ${class.fqn.substring(0,$class.fqn.lastIndexOf("."))}.impl.${class.fqn.substring($lastIdx)}Impl(this, p_key, p_clazz);
        #end
        default : return new org.kevoree.modeling.api.reflexive.DynamicKObject(this, p_key, p_clazz);
        }
    }

    #foreach($class in $model.getClasses())
    #set($lastIdx = $class.fqn.lastIndexOf(".")+1)
    @Override
    public $class.fqn create$class.fqn.substring($lastIdx)() {
        return ($class.fqn) this.create(${class.packName}.meta.Meta${class.name}.getInstance());
    }
    #end

    @Override
    public ${mmPackName}.${mmName}Universe universe() {
        return (${mmPackName}.${mmName}Universe) super.universe();
    }

}
#* @vtlvariable name="model" type="duc.ugcm.ast.Model" *#
#* @vtlvariable name="mmPackName" type="java.lang.String" *#
#* @vtlvariable name="mmName" type="java.lang.String" *#